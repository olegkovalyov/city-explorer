name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: xdebug
          extensions: mbstring, pdo, pdo_sqlite, sqlite3, xml, curl, dom, fileinfo, zip

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Create Storage Directories
        run: |
          mkdir -p storage/framework/views
          mkdir -p storage/framework/cache/data
          mkdir -p storage/framework/sessions
          mkdir -p storage/logs

      - name: Set Storage Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Environment File
        run: |
          echo "APP_NAME=CityExplorer" > .env
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost" >> .env
          echo "APP_LOCALE=en" >> .env
          echo "APP_MAINTENANCE_DRIVER=file" >> .env
          echo "BCRYPT_ROUNDS=4" >> .env
          echo "CACHE_STORE=array" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env
          echo "MAIL_MAILER=array" >> .env
          echo "PULSE_ENABLED=false" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "SESSION_DRIVER=array" >> .env
          echo "TELESCOPE_ENABLED=false" >> .env
          echo "OPENWEATHERMAP_API_KEY=test_api_key" >> .env
          echo "FOURSQUARE_API_KEY=test_api_key" >> .env
          echo "FOURSQUARE_API_URL=https://api.foursquare.com/v3" >> .env
          echo "MAPBOX_ACCESS_TOKEN=test_token" >> .env
          echo "DISABLE_VITE_MANIFEST=true" >> .env
          echo "VITE_SKIP_ASSETS=true" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Clear Caches
        run: |
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan cache:clear

      - name: Create Mock Vite Manifest
        run: |
          mkdir -p public/build
          echo '{"resources/js/app.js":{"file":"app.js","src":"resources/js/app.js"},"resources/js/Pages/auth/Login.vue":{"file":"Login.js"},"resources/js/Pages/auth/Register.vue":{"file":"Register.js"},"resources/js/Pages/auth/VerifyEmail.vue":{"file":"VerifyEmail.js"},"resources/js/Pages/auth/ConfirmPassword.vue":{"file":"ConfirmPassword.js"},"resources/js/Pages/auth/ResetPassword.vue":{"file":"ResetPassword.js"},"resources/js/Pages/Profile/Edit.vue":{"file":"ProfileEdit.js"}}' > public/build/manifest.json
          touch public/build/app.js
          touch public/build/Login.js
          touch public/build/Register.js
          touch public/build/VerifyEmail.js
          touch public/build/ConfirmPassword.js
          touch public/build/ResetPassword.js
          touch public/build/ProfileEdit.js

      - name: Build Assets
        run: npm run build || echo "Asset build skipped for tests"

      - name: Run Tests (excluding auth and frontend-assets groups)
        run: php artisan test --exclude-group=auth --exclude-group=frontend-assets
